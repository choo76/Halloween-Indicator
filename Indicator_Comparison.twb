<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Indicator_Comparison' inline='true' name='federated.1k3unh90fqppo51grzulh1wllf3x' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Indicator_Comparison' name='textscan.0hhm8571n4uvje1b8pa741j26m6x'>
            <connection class='textscan' directory='/Users/jtan/Documents/Investment/Halloween-Indicator' filename='Indicator_Comparison.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0hhm8571n4uvje1b8pa741j26m6x' name='Indicator_Comparison.csv' table='[Indicator_Comparison#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Symbol' ordinal='0' />
            <column datatype='integer' name='Period' ordinal='1' />
            <column datatype='date' name='Date.x' ordinal='2' />
            <column datatype='real' name='Return.x' ordinal='3' />
            <column datatype='date' name='Date.y' ordinal='4' />
            <column datatype='real' name='Return.y' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Symbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Symbol]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Symbol</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Period</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Period]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Period</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date.x</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date.x]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Date.x</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Return.x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Return.x]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Return.x</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date.y</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date.y]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Date.y</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Return.y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Return.y]</local-name>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias>Return.y</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Indicator_Comparison.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.483871' measure-ordering='alphabetic' measure-percentage='0.516129' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Indicator_Comparison' name='federated.1k3unh90fqppo51grzulh1wllf3x' />
          </datasources>
          <datasource-dependencies datasource='federated.1k3unh90fqppo51grzulh1wllf3x'>
            <column datatype='date' name='[Date.x]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Period]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Return.x]' role='measure' type='quantitative' />
            <column datatype='real' name='[Return.y]' role='measure' type='quantitative' />
            <column datatype='string' name='[Symbol]' role='dimension' type='nominal' />
            <column-instance column='[Date.x]' derivation='MY' name='[my:Date.x:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Period]' derivation='None' name='[none:Period:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Symbol]' derivation='None' name='[none:Symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[Return.x]' derivation='Sum' name='[sum:Return.x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Return.y]' derivation='Sum' name='[sum:Return.y:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k3unh90fqppo51grzulh1wllf3x].[none:Symbol:nk]'>
            <groupfilter function='member' level='[none:Symbol:nk]' member='&quot;EEM&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1k3unh90fqppo51grzulh1wllf3x].[none:Symbol:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]' field-type='quantitative' max='0.40000000000000002' min='-0.59999999999999998' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]' field-type='quantitative' max='0.40000000000000002' min='-0.59999999999999998' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1k3unh90fqppo51grzulh1wllf3x].[none:Period:ok]' />
              <lod column='[federated.1k3unh90fqppo51grzulh1wllf3x].[my:Date.x:ok]' />
            </encodings>
            <reference-line axis-column='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-table' value='0.0' value-column='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]' z-order='1' />
            <reference-line axis-column='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-table' value='0.0' value-column='[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.y:qk]</rows>
        <cols>[federated.1k3unh90fqppo51grzulh1wllf3x].[sum:Return.x:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1k3unh90fqppo51grzulh1wllf3x].[none:Symbol:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
